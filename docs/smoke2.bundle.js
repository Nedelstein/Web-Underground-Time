!function(e){var r={};function n(t){if(r[t])return r[t].exports;var i=r[t]={i:t,l:!1,exports:{}};return e[t].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=r,n.d=function(e,r,t){n.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,r){if(1&r&&(e=n(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(n.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var i in e)n.d(t,i,function(r){return e[r]}.bind(null,i));return t},n.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(r,"a",r),r},n.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},n.p="",n(n.s=3)}([,,,function(e,r,n){"use strict";n.r(r);n(4);window.addEventListener("load",(function(){const e=document.getElementById("myCanvas");e.width=e.clientWidth,e.height=e.clientHeight;var r={SIM_RESOLUTION:128,DYE_RESOLUTION:512,DENSITY_DISSIPATION:.97,VELOCITY_DISSIPATION:.98,PRESSURE_DISSIPATION:.8,PRESSURE_ITERATIONS:20,CURL:30,SPLAT_RADIUS:.5,SHADING:!0,COLORFUL:!0,PAUSED:!1,BACK_COLOR:{r:0,g:0,b:0},TRANSPARENT:!1,BLOOM:!0,BLOOM_ITERATIONS:8,BLOOM_RESOLUTION:256,BLOOM_INTENSITY:.8,BLOOM_THRESHOLD:.6,BLOOM_SOFT_KNEE:.7};function n(){this.id=-1,this.x=0,this.y=0,this.dx=0,this.dy=0,this.down=!1,this.moved=!1,this.color=[30,0,300]}var t=[],i=[],o=[];t.push(new n);const{gl:a,ext:u}=function(e){const r={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1};var n=e.getContext("webgl2",r);const t=!!n;t||(n=e.getContext("webgl",r)||e.getContext("experimental-webgl",r));var i,o;t?(n.getExtension("EXT_color_buffer_float"),o=n.getExtension("OES_texture_float_linear")):(i=n.getExtension("OES_texture_half_float"),o=n.getExtension("OES_texture_half_float_linear"));n.clearColor(0,0,0,1);const a=t?n.HALF_FLOAT:i.HALF_FLOAT_OES;var u,f,c;t?(u=v(n,n.RGBA16F,n.RGBA,a),f=v(n,n.RG16F,n.RG,a),c=v(n,n.R16F,n.RED,a)):(u=v(n,n.RGBA,n.RGBA,a),f=v(n,n.RGBA,n.RGBA,a),c=v(n,n.RGBA,n.RGBA,a));return{gl:n,ext:{formatRGBA:u,formatRG:f,formatR:c,halfFloatTexType:a,supportLinearFiltering:o}}}(e);function v(e,r,n,t){if(!function(e,r,n,t){var i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,r,4,4,0,n,t,null);var o=e.createFramebuffer();return e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0),e.checkFramebufferStatus(e.FRAMEBUFFER)==e.FRAMEBUFFER_COMPLETE}(e,r,n,t))switch(r){case e.R16F:return v(e,e.RG16F,e.RG,t);case e.RG16F:return v(e,e.RGBA16F,e.RGBA,t);default:return null}return{internalFormat:r,format:n}}/Mobi|Android/i.test(navigator.userAgent)&&(r.SHADING=!1),u.supportLinearFiltering||(r.SHADING=!1,r.BLOOM=!1);class f{constructor(e,r){if(this.uniforms={},this.program=a.createProgram(),a.attachShader(this.program,e),a.attachShader(this.program,r),a.linkProgram(this.program),!a.getProgramParameter(this.program,a.LINK_STATUS))throw a.getProgramInfoLog(this.program);const n=a.getProgramParameter(this.program,a.ACTIVE_UNIFORMS);for(var t=0;t<n;t++){const e=a.getActiveUniform(this.program,t).name;this.uniforms[e]=a.getUniformLocation(this.program,e)}}bind(){a.useProgram(this.program)}}function c(e,r){const n=a.createShader(e);if(a.shaderSource(n,r),a.compileShader(n),!a.getShaderParameter(n,a.COMPILE_STATUS))throw a.getShaderInfoLog(n);return n}const m=c(a.VERTEX_SHADER,"\n    precision highp float;\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform vec2 texelSize;\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        vL = vUv - vec2(texelSize.x, 0.0);\n        vR = vUv + vec2(texelSize.x, 0.0);\n        vT = vUv + vec2(0.0, texelSize.y);\n        vB = vUv - vec2(0.0, texelSize.y);\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),l=c(a.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float value;\n    void main () {\n        gl_FragColor = value * texture2D(uTexture, vUv);\n    }\n"),s=c(a.FRAGMENT_SHADER,"\n    precision mediump float;\n    uniform vec4 color;\n    void main () {\n        gl_FragColor = color;\n    }\n"),g=c(a.FRAGMENT_SHADER,"\n      precision highp float;\n      precision highp sampler2D;\n      varying vec2 vUv;\n      uniform sampler2D uTexture;\n      uniform float aspectRatio;\n      #define SCALE 25.0\n      void main () {\n          vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\n          float v = mod(uv.x + uv.y, 2.0);\n          v = v * 0.1 + 0.8;\n          gl_FragColor = vec4(vec3(v), 1.0);\n      }\n  "),h=c(a.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    void main () {\n        vec3 C = texture2D(uTexture, vUv).rgb;\n        float a = max(C.r, max(C.g, C.b));\n        gl_FragColor = vec4(C, a);\n    }\n"),T=c(a.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform sampler2D uBloom;\n    uniform sampler2D uDithering;\n    uniform vec2 ditherScale;\n    void main () {\n        vec3 C = texture2D(uTexture, vUv).rgb;\n        vec3 bloom = texture2D(uBloom, vUv).rgb;\n        vec3 noise = texture2D(uDithering, vUv * ditherScale).rgb;\n        noise = noise * 2.0 - 1.0;\n        bloom += noise / 800.0;\n        bloom = pow(bloom.rgb, vec3(1.0 / 2.2));\n        C += bloom;\n        float a = max(C.r, max(C.g, C.b));\n        gl_FragColor = vec4(C, a);\n    }\n"),d=c(a.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform vec2 texelSize;\n    void main () {\n        vec3 L = texture2D(uTexture, vL).rgb;\n        vec3 R = texture2D(uTexture, vR).rgb;\n        vec3 T = texture2D(uTexture, vT).rgb;\n        vec3 B = texture2D(uTexture, vB).rgb;\n        vec3 C = texture2D(uTexture, vUv).rgb;\n        float dx = length(R) - length(L);\n        float dy = length(T) - length(B);\n        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n        vec3 l = vec3(0.0, 0.0, 1.0);\n        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n        C.rgb *= diffuse;\n        float a = max(C.r, max(C.g, C.b));\n        gl_FragColor = vec4(C, a);\n    }\n"),E=c(a.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform sampler2D uBloom;\n    uniform sampler2D uDithering;\n    uniform vec2 ditherScale;\n    uniform vec2 texelSize;\n    void main () {\n        vec3 L = texture2D(uTexture, vL).rgb;\n        vec3 R = texture2D(uTexture, vR).rgb;\n        vec3 T = texture2D(uTexture, vT).rgb;\n        vec3 B = texture2D(uTexture, vB).rgb;\n        vec3 C = texture2D(uTexture, vUv).rgb;\n        float dx = length(R) - length(L);\n        float dy = length(T) - length(B);\n        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n        vec3 l = vec3(0.0, 0.0, 1.0);\n        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n        C *= diffuse;\n        vec3 bloom = texture2D(uBloom, vUv).rgb;\n        vec3 noise = texture2D(uDithering, vUv * ditherScale).rgb;\n        noise = noise * 2.0 - 1.0;\n        bloom += noise / 800.0;\n        bloom = pow(bloom.rgb, vec3(1.0 / 2.2));\n        C += bloom;\n        float a = max(C.r, max(C.g, C.b));\n        gl_FragColor = vec4(C, a);\n    }\n"),p=c(a.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform vec3 curve;\n    uniform float threshold;\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n        float br = max(c.r, max(c.g, c.b));\n        float rq = clamp(br - curve.x, 0.0, curve.y);\n        rq = curve.z * rq * rq;\n        c *= max(rq, br - threshold) / max(br, 0.0001);\n        gl_FragColor = vec4(c, 0.0);\n    }\n"),x=c(a.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum;\n    }\n"),R=c(a.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform float intensity;\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum * intensity;\n    }\n"),D=c(a.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uTarget;\n    uniform float aspectRatio;\n    uniform vec3 color;\n    uniform vec2 point;\n    uniform float radius;\n    void main () {\n        vec2 p = vUv - point.xy;\n        p.x *= aspectRatio;\n        vec3 splat = exp(-dot(p, p) / radius) * color;\n        vec3 base = texture2D(uTarget, vUv).xyz;\n        gl_FragColor = vec4(base + splat, 1.0);\n    }\n"),y=c(a.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform vec2 dyeTexelSize;\n    uniform float dt;\n    uniform float dissipation;\n    vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n        vec2 st = uv / tsize - 0.5;\n        vec2 iuv = floor(st);\n        vec2 fuv = fract(st);\n        vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n        vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n        vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n        vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n        return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n    }\n    void main () {\n        vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n        gl_FragColor = dissipation * bilerp(uSource, coord, dyeTexelSize);\n        gl_FragColor.a = 1.0;\n    }\n"),_=c(a.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform float dt;\n    uniform float dissipation;\n    void main () {\n        vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n        gl_FragColor = dissipation * texture2D(uSource, coord);\n        gl_FragColor.a = 1.0;\n    }\n"),S=c(a.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n    void main () {\n        float L = texture2D(uVelocity, vL).x;\n        float R = texture2D(uVelocity, vR).x;\n        float T = texture2D(uVelocity, vT).y;\n        float B = texture2D(uVelocity, vB).y;\n        vec2 C = texture2D(uVelocity, vUv).xy;\n        if (vL.x < 0.0) { L = -C.x; }\n        if (vR.x > 1.0) { R = -C.x; }\n        if (vT.y > 1.0) { T = -C.y; }\n        if (vB.y < 0.0) { B = -C.y; }\n        float div = 0.5 * (R - L + T - B);\n        gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n    }\n"),b=c(a.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n    void main () {\n        float L = texture2D(uVelocity, vL).y;\n        float R = texture2D(uVelocity, vR).y;\n        float T = texture2D(uVelocity, vT).x;\n        float B = texture2D(uVelocity, vB).x;\n        float vorticity = R - L - T + B;\n        gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n    }\n"),A=c(a.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uCurl;\n    uniform float curl;\n    uniform float dt;\n    void main () {\n        float L = texture2D(uCurl, vL).x;\n        float R = texture2D(uCurl, vR).x;\n        float T = texture2D(uCurl, vT).x;\n        float B = texture2D(uCurl, vB).x;\n        float C = texture2D(uCurl, vUv).x;\n        vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n        force /= length(force) + 0.0001;\n        force *= curl * C;\n        force.y *= -1.0;\n        vec2 vel = texture2D(uVelocity, vUv).xy;\n        gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\n    }\n"),L=c(a.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uDivergence;\n    vec2 boundary (vec2 uv) {\n        return uv;\n        // uncomment if you use wrap or repeat texture mode\n        // uv = min(max(uv, 0.0), 1.0);\n        // return uv;\n    }\n    void main () {\n        float L = texture2D(uPressure, boundary(vL)).x;\n        float R = texture2D(uPressure, boundary(vR)).x;\n        float T = texture2D(uPressure, boundary(vT)).x;\n        float B = texture2D(uPressure, boundary(vB)).x;\n        float C = texture2D(uPressure, vUv).x;\n        float divergence = texture2D(uDivergence, vUv).x;\n        float pressure = (L + R + B + T - divergence) * 0.25;\n        gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n    }\n"),U=c(a.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uVelocity;\n    vec2 boundary (vec2 uv) {\n        return uv;\n        // uv = min(max(uv, 0.0), 1.0);\n        // return uv;\n    }\n    void main () {\n        float L = texture2D(uPressure, boundary(vL)).x;\n        float R = texture2D(uPressure, boundary(vR)).x;\n        float T = texture2D(uPressure, boundary(vT)).x;\n        float B = texture2D(uPressure, boundary(vB)).x;\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity.xy -= vec2(R - L, T - B);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n"),F=(()=>(a.bindBuffer(a.ARRAY_BUFFER,a.createBuffer()),a.bufferData(a.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),a.STATIC_DRAW),a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,a.createBuffer()),a.bufferData(a.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),a.STATIC_DRAW),a.vertexAttribPointer(0,2,a.FLOAT,!1,0,0),a.enableVertexAttribArray(0),e=>{a.bindFramebuffer(a.FRAMEBUFFER,e),a.drawElements(a.TRIANGLES,6,a.UNSIGNED_SHORT,0)}))();var B,w,O,N,C,I,P,M,G,X,H=function(e){var r=a.createTexture();a.bindTexture(a.TEXTURE_2D,r),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.LINEAR),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.REPEAT),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.REPEAT),a.texImage2D(a.TEXTURE_2D,0,a.RGB,1,1,0,a.RGB,a.UNSIGNED_BYTE,new Uint8Array([255,255,255]));var n={texture:r,width:1,height:1,attach:e=>(a.activeTexture(a.TEXTURE0+e),a.bindTexture(a.TEXTURE_2D,r),e)},t=new Image;return t.onload=()=>{n.width=t.width,n.height=t.height,a.bindTexture(a.TEXTURE_2D,r),a.texImage2D(a.TEXTURE_2D,0,a.RGB,a.RGB,a.UNSIGNED_BYTE,t)},t.src=e,n}("LDR_RGB1_0.png");const z=new f(m,l),V=new f(m,s),Y=new f(m,g),W=new f(m,h),q=new f(m,T),k=new f(m,d),j=new f(m,E),K=new f(m,p),J=new f(m,x),Q=new f(m,R),Z=new f(m,D),$=new f(m,u.supportLinearFiltering?_:y),ee=new f(m,S),re=new f(m,b),ne=new f(m,A),te=new f(m,L),ie=new f(m,U);function oe(){var e=ge(r.SIM_RESOLUTION),n=ge(r.DYE_RESOLUTION);B=e.width,w=e.height,O=n.width,N=n.height;const t=u.halfFloatTexType,i=u.formatRGBA,v=u.formatRG,f=u.formatR,c=u.supportLinearFiltering?a.LINEAR:a.NEAREST;C=null==C?ue(O,N,i.internalFormat,i.format,t,c):ve(C,O,N,i.internalFormat,i.format,t,c),I=null==I?ue(B,w,v.internalFormat,v.format,t,c):ve(I,B,w,v.internalFormat,v.format,t,c),P=ae(B,w,f.internalFormat,f.format,t,a.NEAREST),M=ae(B,w,f.internalFormat,f.format,t,a.NEAREST),G=ue(B,w,f.internalFormat,f.format,t,a.NEAREST),function(){var e=ge(r.BLOOM_RESOLUTION);const n=u.halfFloatTexType,t=u.formatRGBA,i=u.supportLinearFiltering?a.LINEAR:a.NEAREST;X=ae(e.width,e.height,t.internalFormat,t.format,n,i),o.length=0;for(var v=0;v<r.BLOOM_ITERATIONS;v++){var f=e.width>>v+1,c=e.height>>v+1;if(f<2||c<2)break;var m=ae(f,c,t.internalFormat,t.format,n,i);o.push(m)}}()}function ae(e,r,n,t,i,o){a.activeTexture(a.TEXTURE0);var u=a.createTexture();a.bindTexture(a.TEXTURE_2D,u),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,o),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,o),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE),a.texImage2D(a.TEXTURE_2D,0,n,e,r,0,t,i,null);var v=a.createFramebuffer();return a.bindFramebuffer(a.FRAMEBUFFER,v),a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,u,0),a.viewport(0,0,e,r),a.clear(a.COLOR_BUFFER_BIT),{texture:u,fbo:v,width:e,height:r,attach:e=>(a.activeTexture(a.TEXTURE0+e),a.bindTexture(a.TEXTURE_2D,u),e)}}function ue(e,r,n,t,i,o){var a=ae(e,r,n,t,i,o),u=ae(e,r,n,t,i,o);return{get read(){return a},set read(e){a=e},get write(){return u},set write(e){u=e},swap(){var e=a;a=u,u=e}}}function ve(e,r,n,t,i,o,u){return e.read=function(e,r,n,t,i,o,u){var v=ae(r,n,t,i,o,u);return z.bind(),a.uniform1i(z.uniforms.uTexture,e.attach(0)),a.uniform1f(z.uniforms.value,1),F(v.fbo),v}(e.read,r,n,t,i,o,u),e.write=ae(r,n,t,i,o,u),e}oe(),le(parseInt(20*Math.random())+5);var fe=Date.now();function ce(n){r.BLOOM&&function(e,n){if(o.length<2)return;var t=n;a.disable(a.BLEND),K.bind();var i=r.BLOOM_THRESHOLD*r.BLOOM_SOFT_KNEE+1e-4,u=r.BLOOM_THRESHOLD-i,v=2*i,f=.25/i;a.uniform3f(K.uniforms.curve,u,v,f),a.uniform1f(K.uniforms.threshold,r.BLOOM_THRESHOLD),a.uniform1i(K.uniforms.uTexture,e.attach(0)),a.viewport(0,0,t.width,t.height),F(t.fbo),J.bind();for(var c=0;c<o.length;c++){var m=o[c];a.uniform2f(J.uniforms.texelSize,1/t.width,1/t.height),a.uniform1i(J.uniforms.uTexture,t.attach(0)),a.viewport(0,0,m.width,m.height),F(m.fbo),t=m}a.blendFunc(a.ONE,a.ONE),a.enable(a.BLEND);for(c=o.length-2;c>=0;c--){var l=o[c];a.uniform2f(J.uniforms.texelSize,1/t.width,1/t.height),a.uniform1i(J.uniforms.uTexture,t.attach(0)),a.viewport(0,0,l.width,l.height),F(l.fbo),t=l}a.disable(a.BLEND),Q.bind(),a.uniform2f(Q.uniforms.texelSize,1/t.width,1/t.height),a.uniform1i(Q.uniforms.uTexture,t.attach(0)),a.uniform1f(Q.uniforms.intensity,r.BLOOM_INTENSITY),a.viewport(0,0,n.width,n.height),F(n.fbo)}(C.read,X),null!=n&&r.TRANSPARENT?a.disable(a.BLEND):(a.blendFunc(a.ONE,a.ONE_MINUS_SRC_ALPHA),a.enable(a.BLEND));var t,i=null==n?a.drawingBufferWidth:O,u=null==n?a.drawingBufferHeight:N;if(a.viewport(0,0,i,u),!r.TRANSPARENT){V.bind();var v=r.BACK_COLOR;a.uniform4f(V.uniforms.color,v.r/255,v.g/255,v.b/255,1),F(n)}if(null==n&&r.TRANSPARENT&&(Y.bind(),a.uniform1f(Y.uniforms.aspectRatio,e.width/e.height),F(null)),r.SHADING){if((t=r.BLOOM?j:k).bind(),a.uniform2f(t.uniforms.texelSize,1/i,1/u),a.uniform1i(t.uniforms.uTexture,C.read.attach(0)),r.BLOOM){a.uniform1i(t.uniforms.uBloom,X.attach(1)),a.uniform1i(t.uniforms.uDithering,H.attach(2));var f=he(H,i,u);a.uniform2f(t.uniforms.ditherScale,f.x,f.y)}}else if((t=r.BLOOM?q:W).bind(),a.uniform1i(t.uniforms.uTexture,C.read.attach(0)),r.BLOOM){a.uniform1i(t.uniforms.uBloom,X.attach(1)),a.uniform1i(t.uniforms.uDithering,H.attach(2));f=he(H,i,u);a.uniform2f(t.uniforms.ditherScale,f.x,f.y)}F(n)}function me(n,t,i,o,u){a.viewport(0,0,B,w),Z.bind(),a.uniform1i(Z.uniforms.uTarget,I.read.attach(0)),a.uniform1f(Z.uniforms.aspectRatio,e.width/e.height),a.uniform2f(Z.uniforms.point,n/e.width,1-t/e.height),a.uniform3f(Z.uniforms.color,i,-o,1),a.uniform1f(Z.uniforms.radius,r.SPLAT_RADIUS/100),F(I.write.fbo),I.swap(),a.viewport(0,0,O,N),a.uniform1i(Z.uniforms.uTarget,C.read.attach(0)),a.uniform3f(Z.uniforms.color,u.r,u.g,u.b),F(C.write.fbo),C.swap()}function le(r){for(var n=0;n<r;n++){const r=se();r.r*=10,r.g*=10,r.b*=10,me(e.width*Math.random(),e.height*Math.random(),1e3*(Math.random()-.5),1e3*(Math.random()-.5),r)}}function se(){var e=function(e,r,n){var t,i,o,a,u,v,f,c;switch(a=Math.floor(6*e),v=n*(1-r),f=n*(1-(u=6*e-a)*r),c=n*(1-(1-u)*r),a%6){case 0:t=n,i=c,o=v;break;case 1:t=f,i=n,o=v;break;case 2:t=v,i=n,o=c;break;case 3:t=v,i=f,o=n;break;case 4:t=c,i=v,o=n;break;case 5:t=n,i=v,o=f}return{r:t,g:i,b:o}}(Math.random(),1,1);return e.r*=.15,e.g*=.15,e.b*=.15,e}function ge(e){var r=a.drawingBufferWidth/a.drawingBufferHeight;r<1&&(r=1/r);var n=Math.round(e*r),t=Math.round(e);return a.drawingBufferWidth>a.drawingBufferHeight?{width:n,height:t}:{width:t,height:n}}function he(e,r,n){return{x:r/e.width,y:n/e.height}}!function n(){e.width==e.clientWidth&&e.height==e.clientHeight||(e.width=e.clientWidth,e.height=e.clientHeight,oe()),function(){i.length>0&&le(i.pop());for(var e=0;e<t.length;e++){const r=t[e];r.moved&&(me(r.x,r.y,r.dx,r.dy,r.color),r.moved=!1)}if(!r.COLORFUL)return;if(fe+100<Date.now()){fe=Date.now();for(e=0;e<t.length;e++){t[e].color=se()}}}(),r.PAUSED||function(e){a.disable(a.BLEND),a.viewport(0,0,B,w),re.bind(),a.uniform2f(re.uniforms.texelSize,1/B,1/w),a.uniform1i(re.uniforms.uVelocity,I.read.attach(0)),F(M.fbo),ne.bind(),a.uniform2f(ne.uniforms.texelSize,1/B,1/w),a.uniform1i(ne.uniforms.uVelocity,I.read.attach(0)),a.uniform1i(ne.uniforms.uCurl,M.attach(1)),a.uniform1f(ne.uniforms.curl,r.CURL),a.uniform1f(ne.uniforms.dt,e),F(I.write.fbo),I.swap(),ee.bind(),a.uniform2f(ee.uniforms.texelSize,1/B,1/w),a.uniform1i(ee.uniforms.uVelocity,I.read.attach(0)),F(P.fbo),z.bind(),a.uniform1i(z.uniforms.uTexture,G.read.attach(0)),a.uniform1f(z.uniforms.value,r.PRESSURE_DISSIPATION),F(G.write.fbo),G.swap(),te.bind(),a.uniform2f(te.uniforms.texelSize,1/B,1/w),a.uniform1i(te.uniforms.uDivergence,P.attach(0));for(var n=0;n<r.PRESSURE_ITERATIONS;n++)a.uniform1i(te.uniforms.uPressure,G.read.attach(1)),F(G.write.fbo),G.swap();ie.bind(),a.uniform2f(ie.uniforms.texelSize,1/B,1/w),a.uniform1i(ie.uniforms.uPressure,G.read.attach(0)),a.uniform1i(ie.uniforms.uVelocity,I.read.attach(1)),F(I.write.fbo),I.swap(),$.bind(),a.uniform2f($.uniforms.texelSize,1/B,1/w),u.supportLinearFiltering||a.uniform2f($.uniforms.dyeTexelSize,1/B,1/w);var t=I.read.attach(0);a.uniform1i($.uniforms.uVelocity,t),a.uniform1i($.uniforms.uSource,t),a.uniform1f($.uniforms.dt,e),a.uniform1f($.uniforms.dissipation,r.VELOCITY_DISSIPATION),F(I.write.fbo),I.swap(),a.viewport(0,0,O,N),u.supportLinearFiltering||a.uniform2f($.uniforms.dyeTexelSize,1/O,1/N);a.uniform1i($.uniforms.uVelocity,I.read.attach(0)),a.uniform1i($.uniforms.uSource,C.read.attach(1)),a.uniform1f($.uniforms.dissipation,r.DENSITY_DISSIPATION),F(C.write.fbo),C.swap()}(.016);ce(null),requestAnimationFrame(n)}(),document.querySelector("body").addEventListener("mousemove",e=>{t[0].moved=t[0].down,t[0].dx=5*(e.offsetX-t[0].x),t[0].dy=5*(e.offsetY-t[0].y),t[0].x=e.offsetX,t[0].y=e.offsetY}),document.querySelector("body").addEventListener("touchmove",e=>{e.preventDefault();const r=e.targetTouches;for(var n=0;n<r.length;n++){var i=t[n];i.moved=i.down,i.dx=8*(r[n].pageX-i.x),i.dy=8*(r[n].pageY-i.y),i.x=r[n].pageX,i.y=r[n].pageY}},!1),document.querySelector("body").addEventListener("mousedown",()=>{t[0].down=!0,t[0].color=se()}),document.querySelector("body").addEventListener("touchstart",e=>{e.preventDefault();const r=e.targetTouches;for(var i=0;i<r.length;i++)i>=t.length&&t.push(new n),t[i].id=r[i].identifier,t[i].down=!0,t[i].x=r[i].pageX,t[i].y=r[i].pageY,t[i].color=se()}),document.querySelector("body").addEventListener("mouseup",()=>{t[0].down=!1}),document.querySelector("body").addEventListener("touchend",e=>{const r=e.changedTouches;for(var n=0;n<r.length;n++)for(var i=0;i<t.length;i++)r[n].identifier==t[i].id&&(t[i].down=!1)}),document.querySelector("body").addEventListener("keydown",e=>{"KeyP"===e.code&&(r.PAUSED=!r.PAUSED)," "===e.key&&i.push(parseInt(20*Math.random())+5)})}))},function(e,r,n){}]);