!function(e){var n={};function r(t){if(n[t])return n[t].exports;var i=n[t]={i:t,l:!1,exports:{}};return e[t].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=e,r.c=n,r.d=function(e,n,t){r.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,n){if(1&n&&(e=r(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)r.d(t,i,function(n){return e[n]}.bind(null,i));return t},r.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},r.p="",r(r.s=0)}([function(e,n,r){"use strict";r.r(n);r(1);window.addEventListener("load",(function(){const e=document.getElementById("myCanvas");e.width=e.clientWidth,e.height=e.clientHeight;let n={SIM_RESOLUTION:128,DYE_RESOLUTION:512,DENSITY_DISSIPATION:.97,VELOCITY_DISSIPATION:.98,PRESSURE_DISSIPATION:.8,PRESSURE_ITERATIONS:20,CURL:30,SPLAT_RADIUS:.5,SHADING:!0,COLORFUL:!0,PAUSED:!1,BACK_COLOR:{r:0,g:0,b:0},TRANSPARENT:!1,BLOOM:!0,BLOOM_ITERATIONS:8,BLOOM_RESOLUTION:256,BLOOM_INTENSITY:.8,BLOOM_THRESHOLD:.6,BLOOM_SOFT_KNEE:.7};function r(){this.id=-1,this.x=0,this.y=0,this.dx=0,this.dy=0,this.down=!1,this.moved=!1,this.color=[30,0,300]}let t=[],i=[],o=[];t.push(new r);const{gl:u,ext:a}=function(e){const n={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1};let r=e.getContext("webgl2",n);const t=!!r;t||(r=e.getContext("webgl",n)||e.getContext("experimental-webgl",n));let i,o;t?(r.getExtension("EXT_color_buffer_float"),o=r.getExtension("OES_texture_float_linear")):(i=r.getExtension("OES_texture_half_float"),o=r.getExtension("OES_texture_half_float_linear"));r.clearColor(0,0,0,1);const u=t?r.HALF_FLOAT:i.HALF_FLOAT_OES;let a,l,f;t?(a=v(r,r.RGBA16F,r.RGBA,u),l=v(r,r.RG16F,r.RG,u),f=v(r,r.R16F,r.RED,u)):(a=v(r,r.RGBA,r.RGBA,u),l=v(r,r.RGBA,r.RGBA,u),f=v(r,r.RGBA,r.RGBA,u));return{gl:r,ext:{formatRGBA:a,formatRG:l,formatR:f,halfFloatTexType:u,supportLinearFiltering:o}}}(e);function v(e,n,r,t){if(!function(e,n,r,t){let i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,n,4,4,0,r,t,null);let o=e.createFramebuffer();return e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0),e.checkFramebufferStatus(e.FRAMEBUFFER)==e.FRAMEBUFFER_COMPLETE}(e,n,r,t))switch(n){case e.R16F:return v(e,e.RG16F,e.RG,t);case e.RG16F:return v(e,e.RGBA16F,e.RGBA,t);default:return null}return{internalFormat:n,format:r}}/Mobi|Android/i.test(navigator.userAgent)&&(n.SHADING=!1),a.supportLinearFiltering||(n.SHADING=!1,n.BLOOM=!1);class l{constructor(e,n){if(this.uniforms={},this.program=u.createProgram(),u.attachShader(this.program,e),u.attachShader(this.program,n),u.linkProgram(this.program),!u.getProgramParameter(this.program,u.LINK_STATUS))throw u.getProgramInfoLog(this.program);const r=u.getProgramParameter(this.program,u.ACTIVE_UNIFORMS);for(let e=0;e<r;e++){const n=u.getActiveUniform(this.program,e).name;this.uniforms[n]=u.getUniformLocation(this.program,n)}}bind(){u.useProgram(this.program)}}function f(e,n){const r=u.createShader(e);if(u.shaderSource(r,n),u.compileShader(r),!u.getShaderParameter(r,u.COMPILE_STATUS))throw u.getShaderInfoLog(r);return r}const c=f(u.VERTEX_SHADER,"\n    precision highp float;\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform vec2 texelSize;\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        vL = vUv - vec2(texelSize.x, 0.0);\n        vR = vUv + vec2(texelSize.x, 0.0);\n        vT = vUv + vec2(0.0, texelSize.y);\n        vB = vUv - vec2(0.0, texelSize.y);\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),m=f(u.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float value;\n    void main () {\n        gl_FragColor = value * texture2D(uTexture, vUv);\n    }\n"),s=f(u.FRAGMENT_SHADER,"\n    precision mediump float;\n    uniform vec4 color;\n    void main () {\n        gl_FragColor = color;\n    }\n"),g=f(u.FRAGMENT_SHADER,"\n      precision highp float;\n      precision highp sampler2D;\n      varying vec2 vUv;\n      uniform sampler2D uTexture;\n      uniform float aspectRatio;\n      #define SCALE 25.0\n      void main () {\n          vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\n          float v = mod(uv.x + uv.y, 2.0);\n          v = v * 0.1 + 0.8;\n          gl_FragColor = vec4(vec3(v), 1.0);\n      }\n  "),h=f(u.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    void main () {\n        vec3 C = texture2D(uTexture, vUv).rgb;\n        float a = max(C.r, max(C.g, C.b));\n        gl_FragColor = vec4(C, a);\n    }\n"),T=f(u.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform sampler2D uBloom;\n    uniform sampler2D uDithering;\n    uniform vec2 ditherScale;\n    void main () {\n        vec3 C = texture2D(uTexture, vUv).rgb;\n        vec3 bloom = texture2D(uBloom, vUv).rgb;\n        vec3 noise = texture2D(uDithering, vUv * ditherScale).rgb;\n        noise = noise * 2.0 - 1.0;\n        bloom += noise / 800.0;\n        bloom = pow(bloom.rgb, vec3(1.0 / 2.2));\n        C += bloom;\n        float a = max(C.r, max(C.g, C.b));\n        gl_FragColor = vec4(C, a);\n    }\n"),d=f(u.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform vec2 texelSize;\n    void main () {\n        vec3 L = texture2D(uTexture, vL).rgb;\n        vec3 R = texture2D(uTexture, vR).rgb;\n        vec3 T = texture2D(uTexture, vT).rgb;\n        vec3 B = texture2D(uTexture, vB).rgb;\n        vec3 C = texture2D(uTexture, vUv).rgb;\n        float dx = length(R) - length(L);\n        float dy = length(T) - length(B);\n        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n        vec3 l = vec3(0.0, 0.0, 1.0);\n        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n        C.rgb *= diffuse;\n        float a = max(C.r, max(C.g, C.b));\n        gl_FragColor = vec4(C, a);\n    }\n"),E=f(u.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform sampler2D uBloom;\n    uniform sampler2D uDithering;\n    uniform vec2 ditherScale;\n    uniform vec2 texelSize;\n    void main () {\n        vec3 L = texture2D(uTexture, vL).rgb;\n        vec3 R = texture2D(uTexture, vR).rgb;\n        vec3 T = texture2D(uTexture, vT).rgb;\n        vec3 B = texture2D(uTexture, vB).rgb;\n        vec3 C = texture2D(uTexture, vUv).rgb;\n        float dx = length(R) - length(L);\n        float dy = length(T) - length(B);\n        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n        vec3 l = vec3(0.0, 0.0, 1.0);\n        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n        C *= diffuse;\n        vec3 bloom = texture2D(uBloom, vUv).rgb;\n        vec3 noise = texture2D(uDithering, vUv * ditherScale).rgb;\n        noise = noise * 2.0 - 1.0;\n        bloom += noise / 800.0;\n        bloom = pow(bloom.rgb, vec3(1.0 / 2.2));\n        C += bloom;\n        float a = max(C.r, max(C.g, C.b));\n        gl_FragColor = vec4(C, a);\n    }\n"),p=f(u.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform vec3 curve;\n    uniform float threshold;\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n        float br = max(c.r, max(c.g, c.b));\n        float rq = clamp(br - curve.x, 0.0, curve.y);\n        rq = curve.z * rq * rq;\n        c *= max(rq, br - threshold) / max(br, 0.0001);\n        gl_FragColor = vec4(c, 0.0);\n    }\n"),x=f(u.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum;\n    }\n"),R=f(u.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform float intensity;\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum * intensity;\n    }\n"),D=f(u.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uTarget;\n    uniform float aspectRatio;\n    uniform vec3 color;\n    uniform vec2 point;\n    uniform float radius;\n    void main () {\n        vec2 p = vUv - point.xy;\n        p.x *= aspectRatio;\n        vec3 splat = exp(-dot(p, p) / radius) * color;\n        vec3 base = texture2D(uTarget, vUv).xyz;\n        gl_FragColor = vec4(base + splat, 1.0);\n    }\n"),y=f(u.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform vec2 dyeTexelSize;\n    uniform float dt;\n    uniform float dissipation;\n    vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n        vec2 st = uv / tsize - 0.5;\n        vec2 iuv = floor(st);\n        vec2 fuv = fract(st);\n        vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n        vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n        vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n        vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n        return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n    }\n    void main () {\n        vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n        gl_FragColor = dissipation * bilerp(uSource, coord, dyeTexelSize);\n        gl_FragColor.a = 1.0;\n    }\n"),_=f(u.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform float dt;\n    uniform float dissipation;\n    void main () {\n        vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n        gl_FragColor = dissipation * texture2D(uSource, coord);\n        gl_FragColor.a = 1.0;\n    }\n"),S=f(u.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n    void main () {\n        float L = texture2D(uVelocity, vL).x;\n        float R = texture2D(uVelocity, vR).x;\n        float T = texture2D(uVelocity, vT).y;\n        float B = texture2D(uVelocity, vB).y;\n        vec2 C = texture2D(uVelocity, vUv).xy;\n        if (vL.x < 0.0) { L = -C.x; }\n        if (vR.x > 1.0) { R = -C.x; }\n        if (vT.y > 1.0) { T = -C.y; }\n        if (vB.y < 0.0) { B = -C.y; }\n        float div = 0.5 * (R - L + T - B);\n        gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n    }\n"),b=f(u.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n    void main () {\n        float L = texture2D(uVelocity, vL).y;\n        float R = texture2D(uVelocity, vR).y;\n        float T = texture2D(uVelocity, vT).x;\n        float B = texture2D(uVelocity, vB).x;\n        float vorticity = R - L - T + B;\n        gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n    }\n"),A=f(u.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uCurl;\n    uniform float curl;\n    uniform float dt;\n    void main () {\n        float L = texture2D(uCurl, vL).x;\n        float R = texture2D(uCurl, vR).x;\n        float T = texture2D(uCurl, vT).x;\n        float B = texture2D(uCurl, vB).x;\n        float C = texture2D(uCurl, vUv).x;\n        vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n        force /= length(force) + 0.0001;\n        force *= curl * C;\n        force.y *= -1.0;\n        vec2 vel = texture2D(uVelocity, vUv).xy;\n        gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\n    }\n"),L=f(u.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uDivergence;\n    vec2 boundary (vec2 uv) {\n        return uv;\n        // uncomment if you use wrap or repeat texture mode\n        // uv = min(max(uv, 0.0), 1.0);\n        // return uv;\n    }\n    void main () {\n        float L = texture2D(uPressure, boundary(vL)).x;\n        float R = texture2D(uPressure, boundary(vR)).x;\n        float T = texture2D(uPressure, boundary(vT)).x;\n        float B = texture2D(uPressure, boundary(vB)).x;\n        float C = texture2D(uPressure, vUv).x;\n        float divergence = texture2D(uDivergence, vUv).x;\n        float pressure = (L + R + B + T - divergence) * 0.25;\n        gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n    }\n"),U=f(u.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uVelocity;\n    vec2 boundary (vec2 uv) {\n        return uv;\n        // uv = min(max(uv, 0.0), 1.0);\n        // return uv;\n    }\n    void main () {\n        float L = texture2D(uPressure, boundary(vL)).x;\n        float R = texture2D(uPressure, boundary(vR)).x;\n        float T = texture2D(uPressure, boundary(vT)).x;\n        float B = texture2D(uPressure, boundary(vB)).x;\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity.xy -= vec2(R - L, T - B);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n"),F=(()=>(u.bindBuffer(u.ARRAY_BUFFER,u.createBuffer()),u.bufferData(u.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),u.STATIC_DRAW),u.bindBuffer(u.ELEMENT_ARRAY_BUFFER,u.createBuffer()),u.bufferData(u.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),u.STATIC_DRAW),u.vertexAttribPointer(0,2,u.FLOAT,!1,0,0),u.enableVertexAttribArray(0),e=>{u.bindFramebuffer(u.FRAMEBUFFER,e),u.drawElements(u.TRIANGLES,6,u.UNSIGNED_SHORT,0)}))();let B,w,O,N,C,I,P,M,G,X,H=function(e){let n=u.createTexture();u.bindTexture(u.TEXTURE_2D,n),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_MIN_FILTER,u.LINEAR),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_MAG_FILTER,u.LINEAR),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_WRAP_S,u.REPEAT),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_WRAP_T,u.REPEAT),u.texImage2D(u.TEXTURE_2D,0,u.RGB,1,1,0,u.RGB,u.UNSIGNED_BYTE,new Uint8Array([255,255,255]));let r={texture:n,width:1,height:1,attach:e=>(u.activeTexture(u.TEXTURE0+e),u.bindTexture(u.TEXTURE_2D,n),e)},t=new Image;return t.onload=()=>{r.width=t.width,r.height=t.height,u.bindTexture(u.TEXTURE_2D,n),u.texImage2D(u.TEXTURE_2D,0,u.RGB,u.RGB,u.UNSIGNED_BYTE,t)},t.src=e,r}("LDR_RGB1_0.png");const z=new l(c,m),V=new l(c,s),Y=new l(c,g),W=new l(c,h),q=new l(c,T),k=new l(c,d),j=new l(c,E),K=new l(c,p),J=new l(c,x),Q=new l(c,R),Z=new l(c,D),$=new l(c,a.supportLinearFiltering?_:y),ee=new l(c,S),ne=new l(c,b),re=new l(c,A),te=new l(c,L),ie=new l(c,U);function oe(){let e=ge(n.SIM_RESOLUTION),r=ge(n.DYE_RESOLUTION);B=e.width,w=e.height,O=r.width,N=r.height;const t=a.halfFloatTexType,i=a.formatRGBA,v=a.formatRG,l=a.formatR,f=a.supportLinearFiltering?u.LINEAR:u.NEAREST;C=null==C?ae(O,N,i.internalFormat,i.format,t,f):ve(C,O,N,i.internalFormat,i.format,t,f),I=null==I?ae(B,w,v.internalFormat,v.format,t,f):ve(I,B,w,v.internalFormat,v.format,t,f),P=ue(B,w,l.internalFormat,l.format,t,u.NEAREST),M=ue(B,w,l.internalFormat,l.format,t,u.NEAREST),G=ae(B,w,l.internalFormat,l.format,t,u.NEAREST),function(){let e=ge(n.BLOOM_RESOLUTION);const r=a.halfFloatTexType,t=a.formatRGBA,i=a.supportLinearFiltering?u.LINEAR:u.NEAREST;X=ue(e.width,e.height,t.internalFormat,t.format,r,i),o.length=0;for(let u=0;u<n.BLOOM_ITERATIONS;u++){let n=e.width>>u+1,a=e.height>>u+1;if(n<2||a<2)break;let v=ue(n,a,t.internalFormat,t.format,r,i);o.push(v)}}()}function ue(e,n,r,t,i,o){u.activeTexture(u.TEXTURE0);let a=u.createTexture();u.bindTexture(u.TEXTURE_2D,a),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_MIN_FILTER,o),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_MAG_FILTER,o),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_WRAP_S,u.CLAMP_TO_EDGE),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_WRAP_T,u.CLAMP_TO_EDGE),u.texImage2D(u.TEXTURE_2D,0,r,e,n,0,t,i,null);let v=u.createFramebuffer();return u.bindFramebuffer(u.FRAMEBUFFER,v),u.framebufferTexture2D(u.FRAMEBUFFER,u.COLOR_ATTACHMENT0,u.TEXTURE_2D,a,0),u.viewport(0,0,e,n),u.clear(u.COLOR_BUFFER_BIT),{texture:a,fbo:v,width:e,height:n,attach:e=>(u.activeTexture(u.TEXTURE0+e),u.bindTexture(u.TEXTURE_2D,a),e)}}function ae(e,n,r,t,i,o){let u=ue(e,n,r,t,i,o),a=ue(e,n,r,t,i,o);return{get read(){return u},set read(e){u=e},get write(){return a},set write(e){a=e},swap(){let e=u;u=a,a=e}}}function ve(e,n,r,t,i,o,a){return e.read=function(e,n,r,t,i,o,a){let v=ue(n,r,t,i,o,a);return z.bind(),u.uniform1i(z.uniforms.uTexture,e.attach(0)),u.uniform1f(z.uniforms.value,1),F(v.fbo),v}(e.read,n,r,t,i,o,a),e.write=ue(n,r,t,i,o,a),e}oe(),me(parseInt(20*Math.random())+5);let le=Date.now();function fe(r){n.BLOOM&&function(e,r){if(o.length<2)return;let t=r;u.disable(u.BLEND),K.bind();let i=n.BLOOM_THRESHOLD*n.BLOOM_SOFT_KNEE+1e-4,a=n.BLOOM_THRESHOLD-i,v=2*i,l=.25/i;u.uniform3f(K.uniforms.curve,a,v,l),u.uniform1f(K.uniforms.threshold,n.BLOOM_THRESHOLD),u.uniform1i(K.uniforms.uTexture,e.attach(0)),u.viewport(0,0,t.width,t.height),F(t.fbo),J.bind();for(let e=0;e<o.length;e++){let n=o[e];u.uniform2f(J.uniforms.texelSize,1/t.width,1/t.height),u.uniform1i(J.uniforms.uTexture,t.attach(0)),u.viewport(0,0,n.width,n.height),F(n.fbo),t=n}u.blendFunc(u.ONE,u.ONE),u.enable(u.BLEND);for(let e=o.length-2;e>=0;e--){let n=o[e];u.uniform2f(J.uniforms.texelSize,1/t.width,1/t.height),u.uniform1i(J.uniforms.uTexture,t.attach(0)),u.viewport(0,0,n.width,n.height),F(n.fbo),t=n}u.disable(u.BLEND),Q.bind(),u.uniform2f(Q.uniforms.texelSize,1/t.width,1/t.height),u.uniform1i(Q.uniforms.uTexture,t.attach(0)),u.uniform1f(Q.uniforms.intensity,n.BLOOM_INTENSITY),u.viewport(0,0,r.width,r.height),F(r.fbo)}(C.read,X),null!=r&&n.TRANSPARENT?u.disable(u.BLEND):(u.blendFunc(u.ONE,u.ONE_MINUS_SRC_ALPHA),u.enable(u.BLEND));let t=null==r?u.drawingBufferWidth:O,i=null==r?u.drawingBufferHeight:N;if(u.viewport(0,0,t,i),!n.TRANSPARENT){V.bind();let e=n.BACK_COLOR;u.uniform4f(V.uniforms.color,e.r/255,e.g/255,e.b/255,1),F(r)}if(null==r&&n.TRANSPARENT&&(Y.bind(),u.uniform1f(Y.uniforms.aspectRatio,e.width/e.height),F(null)),n.SHADING){let e=n.BLOOM?j:k;if(e.bind(),u.uniform2f(e.uniforms.texelSize,1/t,1/i),u.uniform1i(e.uniforms.uTexture,C.read.attach(0)),n.BLOOM){u.uniform1i(e.uniforms.uBloom,X.attach(1)),u.uniform1i(e.uniforms.uDithering,H.attach(2));let n=he(H,t,i);u.uniform2f(e.uniforms.ditherScale,n.x,n.y)}}else{let e=n.BLOOM?q:W;if(e.bind(),u.uniform1i(e.uniforms.uTexture,C.read.attach(0)),n.BLOOM){u.uniform1i(e.uniforms.uBloom,X.attach(1)),u.uniform1i(e.uniforms.uDithering,H.attach(2));let n=he(H,t,i);u.uniform2f(e.uniforms.ditherScale,n.x,n.y)}}F(r)}function ce(r,t,i,o,a){u.viewport(0,0,B,w),Z.bind(),u.uniform1i(Z.uniforms.uTarget,I.read.attach(0)),u.uniform1f(Z.uniforms.aspectRatio,e.width/e.height),u.uniform2f(Z.uniforms.point,r/e.width,1-t/e.height),u.uniform3f(Z.uniforms.color,i,-o,1),u.uniform1f(Z.uniforms.radius,n.SPLAT_RADIUS/100),F(I.write.fbo),I.swap(),u.viewport(0,0,O,N),u.uniform1i(Z.uniforms.uTarget,C.read.attach(0)),u.uniform3f(Z.uniforms.color,a.r,a.g,a.b),F(C.write.fbo),C.swap()}function me(n){for(let r=0;r<n;r++){const n=se();n.r*=10,n.g*=10,n.b*=10,ce(e.width*Math.random(),e.height*Math.random(),1e3*(Math.random()-.5),1e3*(Math.random()-.5),n)}}function se(){let e=function(e,n,r){let t,i,o,u,a,v,l,f;switch(u=Math.floor(6*e),v=r*(1-n),l=r*(1-(a=6*e-u)*n),f=r*(1-(1-a)*n),u%6){case 0:t=r,i=f,o=v;break;case 1:t=l,i=r,o=v;break;case 2:t=v,i=r,o=f;break;case 3:t=v,i=l,o=r;break;case 4:t=f,i=v,o=r;break;case 5:t=r,i=v,o=l}return{r:t,g:i,b:o}}(Math.random(),1,1);return e.r*=.15,e.g*=.15,e.b*=.15,e}function ge(e){let n=u.drawingBufferWidth/u.drawingBufferHeight;n<1&&(n=1/n);let r=Math.round(e*n),t=Math.round(e);return u.drawingBufferWidth>u.drawingBufferHeight?{width:r,height:t}:{width:t,height:r}}function he(e,n,r){return{x:n/e.width,y:r/e.height}}!function r(){e.width==e.clientWidth&&e.height==e.clientHeight||(e.width=e.clientWidth,e.height=e.clientHeight,oe()),function(){i.length>0&&me(i.pop());for(let e=0;e<t.length;e++){const n=t[e];n.moved&&(ce(n.x,n.y,n.dx,n.dy,n.color),n.moved=!1)}if(!n.COLORFUL)return;if(le+100<Date.now()){le=Date.now();for(let e=0;e<t.length;e++){t[e].color=se()}}}(),n.PAUSED||function(e){u.disable(u.BLEND),u.viewport(0,0,B,w),ne.bind(),u.uniform2f(ne.uniforms.texelSize,1/B,1/w),u.uniform1i(ne.uniforms.uVelocity,I.read.attach(0)),F(M.fbo),re.bind(),u.uniform2f(re.uniforms.texelSize,1/B,1/w),u.uniform1i(re.uniforms.uVelocity,I.read.attach(0)),u.uniform1i(re.uniforms.uCurl,M.attach(1)),u.uniform1f(re.uniforms.curl,n.CURL),u.uniform1f(re.uniforms.dt,e),F(I.write.fbo),I.swap(),ee.bind(),u.uniform2f(ee.uniforms.texelSize,1/B,1/w),u.uniform1i(ee.uniforms.uVelocity,I.read.attach(0)),F(P.fbo),z.bind(),u.uniform1i(z.uniforms.uTexture,G.read.attach(0)),u.uniform1f(z.uniforms.value,n.PRESSURE_DISSIPATION),F(G.write.fbo),G.swap(),te.bind(),u.uniform2f(te.uniforms.texelSize,1/B,1/w),u.uniform1i(te.uniforms.uDivergence,P.attach(0));for(let e=0;e<n.PRESSURE_ITERATIONS;e++)u.uniform1i(te.uniforms.uPressure,G.read.attach(1)),F(G.write.fbo),G.swap();ie.bind(),u.uniform2f(ie.uniforms.texelSize,1/B,1/w),u.uniform1i(ie.uniforms.uPressure,G.read.attach(0)),u.uniform1i(ie.uniforms.uVelocity,I.read.attach(1)),F(I.write.fbo),I.swap(),$.bind(),u.uniform2f($.uniforms.texelSize,1/B,1/w),a.supportLinearFiltering||u.uniform2f($.uniforms.dyeTexelSize,1/B,1/w);let r=I.read.attach(0);u.uniform1i($.uniforms.uVelocity,r),u.uniform1i($.uniforms.uSource,r),u.uniform1f($.uniforms.dt,e),u.uniform1f($.uniforms.dissipation,n.VELOCITY_DISSIPATION),F(I.write.fbo),I.swap(),u.viewport(0,0,O,N),a.supportLinearFiltering||u.uniform2f($.uniforms.dyeTexelSize,1/O,1/N);u.uniform1i($.uniforms.uVelocity,I.read.attach(0)),u.uniform1i($.uniforms.uSource,C.read.attach(1)),u.uniform1f($.uniforms.dissipation,n.DENSITY_DISSIPATION),F(C.write.fbo),C.swap()}(.016);fe(null),requestAnimationFrame(r)}(),document.querySelector("body").addEventListener("mousemove",e=>{t[0].moved=t[0].down,t[0].dx=5*(e.offsetX-t[0].x),t[0].dy=5*(e.offsetY-t[0].y),t[0].x=e.offsetX,t[0].y=e.offsetY}),document.querySelector("body").addEventListener("touchmove",e=>{e.preventDefault();const n=e.targetTouches;for(let e=0;e<n.length;e++){let r=t[e];r.moved=r.down,r.dx=8*(n[e].pageX-r.x),r.dy=8*(n[e].pageY-r.y),r.x=n[e].pageX,r.y=n[e].pageY}},!1),document.querySelector("body").addEventListener("mousedown",()=>{t[0].down=!0,t[0].color=se()}),document.querySelector("body").addEventListener("touchstart",e=>{e.preventDefault();const n=e.targetTouches;for(let e=0;e<n.length;e++)e>=t.length&&t.push(new r),t[e].id=n[e].identifier,t[e].down=!0,t[e].x=n[e].pageX,t[e].y=n[e].pageY,t[e].color=se()}),document.querySelector("body").addEventListener("mouseup",()=>{t[0].down=!1}),document.querySelector("body").addEventListener("touchend",e=>{const n=e.changedTouches;for(let e=0;e<n.length;e++)for(let r=0;r<t.length;r++)n[e].identifier==t[r].id&&(t[r].down=!1)}),document.querySelector("body").addEventListener("keydown",e=>{"KeyP"===e.code&&(n.PAUSED=!n.PAUSED)," "===e.key&&i.push(parseInt(20*Math.random())+5)})}))},function(e,n,r){}]);