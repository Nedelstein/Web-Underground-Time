!function(e){var r={};function n(t){if(r[t])return r[t].exports;var i=r[t]={i:t,l:!1,exports:{}};return e[t].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=r,n.d=function(e,r,t){n.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,r){if(1&r&&(e=n(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(n.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var i in e)n.d(t,i,function(r){return e[r]}.bind(null,i));return t},n.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(r,"a",r),r},n.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},n.p="",n(n.s=3)}([,,,function(e,r,n){"use strict";n.r(r);n(4);function t(e,r){for(var n=0;n<r.length;n++){var t=r[n];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}window.addEventListener("load",(function(){var e=document.getElementById("myCanvas");e.width=e.clientWidth,e.height=e.clientHeight;var r={SIM_RESOLUTION:128,DYE_RESOLUTION:512,DENSITY_DISSIPATION:.97,VELOCITY_DISSIPATION:.98,PRESSURE_DISSIPATION:.8,PRESSURE_ITERATIONS:20,CURL:30,SPLAT_RADIUS:.5,SHADING:!0,COLORFUL:!0,PAUSED:!1,BACK_COLOR:{r:0,g:0,b:0},TRANSPARENT:!1,BLOOM:!0,BLOOM_ITERATIONS:8,BLOOM_RESOLUTION:256,BLOOM_INTENSITY:.8,BLOOM_THRESHOLD:.6,BLOOM_SOFT_KNEE:.7};function n(){this.id=-1,this.x=0,this.y=0,this.dx=0,this.dy=0,this.down=!1,this.moved=!1,this.color=[30,0,300]}var i=[],o=[],a=[];i.push(new n);var u=function(e){var r,n,t={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1},i=e.getContext("webgl2",t),o=!!i;o||(i=e.getContext("webgl",t)||e.getContext("experimental-webgl",t));o?(i.getExtension("EXT_color_buffer_float"),n=i.getExtension("OES_texture_float_linear")):(r=i.getExtension("OES_texture_half_float"),n=i.getExtension("OES_texture_half_float_linear"));i.clearColor(0,0,0,1);var a,u,v,f=o?i.HALF_FLOAT:r.HALF_FLOAT_OES;o?(a=c(i,i.RGBA16F,i.RGBA,f),u=c(i,i.RG16F,i.RG,f),v=c(i,i.R16F,i.RED,f)):(a=c(i,i.RGBA,i.RGBA,f),u=c(i,i.RGBA,i.RGBA,f),v=c(i,i.RGBA,i.RGBA,f));return{gl:i,ext:{formatRGBA:a,formatRG:u,formatR:v,halfFloatTexType:f,supportLinearFiltering:n}}}(e),v=u.gl,f=u.ext;function c(e,r,n,t){if(!function(e,r,n,t){var i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,r,4,4,0,n,t,null);var o=e.createFramebuffer();return e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0),e.checkFramebufferStatus(e.FRAMEBUFFER)==e.FRAMEBUFFER_COMPLETE}(e,r,n,t))switch(r){case e.R16F:return c(e,e.RG16F,e.RG,t);case e.RG16F:return c(e,e.RGBA16F,e.RGBA,t);default:return null}return{internalFormat:r,format:n}}/Mobi|Android/i.test(navigator.userAgent)&&(r.SHADING=!1),f.supportLinearFiltering||(r.SHADING=!1,r.BLOOM=!1);var m=function(){function e(r,n){if(function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,e),this.uniforms={},this.program=v.createProgram(),v.attachShader(this.program,r),v.attachShader(this.program,n),v.linkProgram(this.program),!v.getProgramParameter(this.program,v.LINK_STATUS))throw v.getProgramInfoLog(this.program);for(var t=v.getProgramParameter(this.program,v.ACTIVE_UNIFORMS),i=0;i<t;i++){var o=v.getActiveUniform(this.program,i).name;this.uniforms[o]=v.getUniformLocation(this.program,o)}}var r,n,i;return r=e,(n=[{key:"bind",value:function(){v.useProgram(this.program)}}])&&t(r.prototype,n),i&&t(r,i),e}();function l(e,r){var n=v.createShader(e);if(v.shaderSource(n,r),v.compileShader(n),!v.getShaderParameter(n,v.COMPILE_STATUS))throw v.getShaderInfoLog(n);return n}var s,g,h,T,d,E,p,x,R,D,y=l(v.VERTEX_SHADER,"\n    precision highp float;\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform vec2 texelSize;\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        vL = vUv - vec2(texelSize.x, 0.0);\n        vR = vUv + vec2(texelSize.x, 0.0);\n        vT = vUv + vec2(0.0, texelSize.y);\n        vB = vUv - vec2(0.0, texelSize.y);\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),_=l(v.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float value;\n    void main () {\n        gl_FragColor = value * texture2D(uTexture, vUv);\n    }\n"),b=l(v.FRAGMENT_SHADER,"\n    precision mediump float;\n    uniform vec4 color;\n    void main () {\n        gl_FragColor = color;\n    }\n"),S=l(v.FRAGMENT_SHADER,"\n      precision highp float;\n      precision highp sampler2D;\n      varying vec2 vUv;\n      uniform sampler2D uTexture;\n      uniform float aspectRatio;\n      #define SCALE 25.0\n      void main () {\n          vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\n          float v = mod(uv.x + uv.y, 2.0);\n          v = v * 0.1 + 0.8;\n          gl_FragColor = vec4(vec3(v), 1.0);\n      }\n  "),A=l(v.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    void main () {\n        vec3 C = texture2D(uTexture, vUv).rgb;\n        float a = max(C.r, max(C.g, C.b));\n        gl_FragColor = vec4(C, a);\n    }\n"),L=l(v.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform sampler2D uBloom;\n    uniform sampler2D uDithering;\n    uniform vec2 ditherScale;\n    void main () {\n        vec3 C = texture2D(uTexture, vUv).rgb;\n        vec3 bloom = texture2D(uBloom, vUv).rgb;\n        vec3 noise = texture2D(uDithering, vUv * ditherScale).rgb;\n        noise = noise * 2.0 - 1.0;\n        bloom += noise / 800.0;\n        bloom = pow(bloom.rgb, vec3(1.0 / 2.2));\n        C += bloom;\n        float a = max(C.r, max(C.g, C.b));\n        gl_FragColor = vec4(C, a);\n    }\n"),U=l(v.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform vec2 texelSize;\n    void main () {\n        vec3 L = texture2D(uTexture, vL).rgb;\n        vec3 R = texture2D(uTexture, vR).rgb;\n        vec3 T = texture2D(uTexture, vT).rgb;\n        vec3 B = texture2D(uTexture, vB).rgb;\n        vec3 C = texture2D(uTexture, vUv).rgb;\n        float dx = length(R) - length(L);\n        float dy = length(T) - length(B);\n        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n        vec3 l = vec3(0.0, 0.0, 1.0);\n        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n        C.rgb *= diffuse;\n        float a = max(C.r, max(C.g, C.b));\n        gl_FragColor = vec4(C, a);\n    }\n"),F=l(v.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform sampler2D uBloom;\n    uniform sampler2D uDithering;\n    uniform vec2 ditherScale;\n    uniform vec2 texelSize;\n    void main () {\n        vec3 L = texture2D(uTexture, vL).rgb;\n        vec3 R = texture2D(uTexture, vR).rgb;\n        vec3 T = texture2D(uTexture, vT).rgb;\n        vec3 B = texture2D(uTexture, vB).rgb;\n        vec3 C = texture2D(uTexture, vUv).rgb;\n        float dx = length(R) - length(L);\n        float dy = length(T) - length(B);\n        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n        vec3 l = vec3(0.0, 0.0, 1.0);\n        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n        C *= diffuse;\n        vec3 bloom = texture2D(uBloom, vUv).rgb;\n        vec3 noise = texture2D(uDithering, vUv * ditherScale).rgb;\n        noise = noise * 2.0 - 1.0;\n        bloom += noise / 800.0;\n        bloom = pow(bloom.rgb, vec3(1.0 / 2.2));\n        C += bloom;\n        float a = max(C.r, max(C.g, C.b));\n        gl_FragColor = vec4(C, a);\n    }\n"),w=l(v.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform vec3 curve;\n    uniform float threshold;\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n        float br = max(c.r, max(c.g, c.b));\n        float rq = clamp(br - curve.x, 0.0, curve.y);\n        rq = curve.z * rq * rq;\n        c *= max(rq, br - threshold) / max(br, 0.0001);\n        gl_FragColor = vec4(c, 0.0);\n    }\n"),B=l(v.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum;\n    }\n"),O=l(v.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform float intensity;\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum * intensity;\n    }\n"),C=l(v.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uTarget;\n    uniform float aspectRatio;\n    uniform vec3 color;\n    uniform vec2 point;\n    uniform float radius;\n    void main () {\n        vec2 p = vUv - point.xy;\n        p.x *= aspectRatio;\n        vec3 splat = exp(-dot(p, p) / radius) * color;\n        vec3 base = texture2D(uTarget, vUv).xyz;\n        gl_FragColor = vec4(base + splat, 1.0);\n    }\n"),N=l(v.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform vec2 dyeTexelSize;\n    uniform float dt;\n    uniform float dissipation;\n    vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n        vec2 st = uv / tsize - 0.5;\n        vec2 iuv = floor(st);\n        vec2 fuv = fract(st);\n        vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n        vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n        vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n        vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n        return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n    }\n    void main () {\n        vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n        gl_FragColor = dissipation * bilerp(uSource, coord, dyeTexelSize);\n        gl_FragColor.a = 1.0;\n    }\n"),I=l(v.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform float dt;\n    uniform float dissipation;\n    void main () {\n        vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n        gl_FragColor = dissipation * texture2D(uSource, coord);\n        gl_FragColor.a = 1.0;\n    }\n"),P=l(v.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n    void main () {\n        float L = texture2D(uVelocity, vL).x;\n        float R = texture2D(uVelocity, vR).x;\n        float T = texture2D(uVelocity, vT).y;\n        float B = texture2D(uVelocity, vB).y;\n        vec2 C = texture2D(uVelocity, vUv).xy;\n        if (vL.x < 0.0) { L = -C.x; }\n        if (vR.x > 1.0) { R = -C.x; }\n        if (vT.y > 1.0) { T = -C.y; }\n        if (vB.y < 0.0) { B = -C.y; }\n        float div = 0.5 * (R - L + T - B);\n        gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n    }\n"),M=l(v.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n    void main () {\n        float L = texture2D(uVelocity, vL).y;\n        float R = texture2D(uVelocity, vR).y;\n        float T = texture2D(uVelocity, vT).x;\n        float B = texture2D(uVelocity, vB).x;\n        float vorticity = R - L - T + B;\n        gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n    }\n"),G=l(v.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uCurl;\n    uniform float curl;\n    uniform float dt;\n    void main () {\n        float L = texture2D(uCurl, vL).x;\n        float R = texture2D(uCurl, vR).x;\n        float T = texture2D(uCurl, vT).x;\n        float B = texture2D(uCurl, vB).x;\n        float C = texture2D(uCurl, vUv).x;\n        vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n        force /= length(force) + 0.0001;\n        force *= curl * C;\n        force.y *= -1.0;\n        vec2 vel = texture2D(uVelocity, vUv).xy;\n        gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\n    }\n"),X=l(v.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uDivergence;\n    vec2 boundary (vec2 uv) {\n        return uv;\n        // uncomment if you use wrap or repeat texture mode\n        // uv = min(max(uv, 0.0), 1.0);\n        // return uv;\n    }\n    void main () {\n        float L = texture2D(uPressure, boundary(vL)).x;\n        float R = texture2D(uPressure, boundary(vR)).x;\n        float T = texture2D(uPressure, boundary(vT)).x;\n        float B = texture2D(uPressure, boundary(vB)).x;\n        float C = texture2D(uPressure, vUv).x;\n        float divergence = texture2D(uDivergence, vUv).x;\n        float pressure = (L + R + B + T - divergence) * 0.25;\n        gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n    }\n"),H=l(v.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uVelocity;\n    vec2 boundary (vec2 uv) {\n        return uv;\n        // uv = min(max(uv, 0.0), 1.0);\n        // return uv;\n    }\n    void main () {\n        float L = texture2D(uPressure, boundary(vL)).x;\n        float R = texture2D(uPressure, boundary(vR)).x;\n        float T = texture2D(uPressure, boundary(vT)).x;\n        float B = texture2D(uPressure, boundary(vB)).x;\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity.xy -= vec2(R - L, T - B);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n"),z=(v.bindBuffer(v.ARRAY_BUFFER,v.createBuffer()),v.bufferData(v.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),v.STATIC_DRAW),v.bindBuffer(v.ELEMENT_ARRAY_BUFFER,v.createBuffer()),v.bufferData(v.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),v.STATIC_DRAW),v.vertexAttribPointer(0,2,v.FLOAT,!1,0,0),v.enableVertexAttribArray(0),function(e){v.bindFramebuffer(v.FRAMEBUFFER,e),v.drawElements(v.TRIANGLES,6,v.UNSIGNED_SHORT,0)}),V=function(e){var r=v.createTexture();v.bindTexture(v.TEXTURE_2D,r),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MIN_FILTER,v.LINEAR),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MAG_FILTER,v.LINEAR),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_S,v.REPEAT),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_T,v.REPEAT),v.texImage2D(v.TEXTURE_2D,0,v.RGB,1,1,0,v.RGB,v.UNSIGNED_BYTE,new Uint8Array([255,255,255]));var n={texture:r,width:1,height:1,attach:function(e){return v.activeTexture(v.TEXTURE0+e),v.bindTexture(v.TEXTURE_2D,r),e}},t=new Image;return t.onload=function(){n.width=t.width,n.height=t.height,v.bindTexture(v.TEXTURE_2D,r),v.texImage2D(v.TEXTURE_2D,0,v.RGB,v.RGB,v.UNSIGNED_BYTE,t)},t.src=e,n}("LDR_RGB1_0.png"),Y=new m(y,_),W=new m(y,b),q=new m(y,S),k=new m(y,A),j=new m(y,L),K=new m(y,U),J=new m(y,F),Q=new m(y,w),Z=new m(y,B),$=new m(y,O),ee=new m(y,C),re=new m(y,f.supportLinearFiltering?I:N),ne=new m(y,P),te=new m(y,M),ie=new m(y,G),oe=new m(y,X),ae=new m(y,H);function ue(){var e=Te(r.SIM_RESOLUTION),n=Te(r.DYE_RESOLUTION);s=e.width,g=e.height,h=n.width,T=n.height;var t=f.halfFloatTexType,i=f.formatRGBA,o=f.formatRG,u=f.formatR,c=f.supportLinearFiltering?v.LINEAR:v.NEAREST;d=null==d?fe(h,T,i.internalFormat,i.format,t,c):ce(d,h,T,i.internalFormat,i.format,t,c),E=null==E?fe(s,g,o.internalFormat,o.format,t,c):ce(E,s,g,o.internalFormat,o.format,t,c),p=ve(s,g,u.internalFormat,u.format,t,v.NEAREST),x=ve(s,g,u.internalFormat,u.format,t,v.NEAREST),R=fe(s,g,u.internalFormat,u.format,t,v.NEAREST),function(){var e=Te(r.BLOOM_RESOLUTION),n=f.halfFloatTexType,t=f.formatRGBA,i=f.supportLinearFiltering?v.LINEAR:v.NEAREST;D=ve(e.width,e.height,t.internalFormat,t.format,n,i),a.length=0;for(var o=0;o<r.BLOOM_ITERATIONS;o++){var u=e.width>>o+1,c=e.height>>o+1;if(u<2||c<2)break;var m=ve(u,c,t.internalFormat,t.format,n,i);a.push(m)}}()}function ve(e,r,n,t,i,o){v.activeTexture(v.TEXTURE0);var a=v.createTexture();v.bindTexture(v.TEXTURE_2D,a),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MIN_FILTER,o),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MAG_FILTER,o),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_S,v.CLAMP_TO_EDGE),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_T,v.CLAMP_TO_EDGE),v.texImage2D(v.TEXTURE_2D,0,n,e,r,0,t,i,null);var u=v.createFramebuffer();return v.bindFramebuffer(v.FRAMEBUFFER,u),v.framebufferTexture2D(v.FRAMEBUFFER,v.COLOR_ATTACHMENT0,v.TEXTURE_2D,a,0),v.viewport(0,0,e,r),v.clear(v.COLOR_BUFFER_BIT),{texture:a,fbo:u,width:e,height:r,attach:function(e){return v.activeTexture(v.TEXTURE0+e),v.bindTexture(v.TEXTURE_2D,a),e}}}function fe(e,r,n,t,i,o){var a=ve(e,r,n,t,i,o),u=ve(e,r,n,t,i,o);return{get read(){return a},set read(e){a=e},get write(){return u},set write(e){u=e},swap:function(){var e=a;a=u,u=e}}}function ce(e,r,n,t,i,o,a){return e.read=function(e,r,n,t,i,o,a){var u=ve(r,n,t,i,o,a);return Y.bind(),v.uniform1i(Y.uniforms.uTexture,e.attach(0)),v.uniform1f(Y.uniforms.value,1),z(u.fbo),u}(e.read,r,n,t,i,o,a),e.write=ve(r,n,t,i,o,a),e}ue(),ge(parseInt(20*Math.random())+5);var me=Date.now();function le(n){r.BLOOM&&function(e,n){if(a.length<2)return;var t=n;v.disable(v.BLEND),Q.bind();var i=r.BLOOM_THRESHOLD*r.BLOOM_SOFT_KNEE+1e-4,o=r.BLOOM_THRESHOLD-i,u=2*i,f=.25/i;v.uniform3f(Q.uniforms.curve,o,u,f),v.uniform1f(Q.uniforms.threshold,r.BLOOM_THRESHOLD),v.uniform1i(Q.uniforms.uTexture,e.attach(0)),v.viewport(0,0,t.width,t.height),z(t.fbo),Z.bind();for(var c=0;c<a.length;c++){var m=a[c];v.uniform2f(Z.uniforms.texelSize,1/t.width,1/t.height),v.uniform1i(Z.uniforms.uTexture,t.attach(0)),v.viewport(0,0,m.width,m.height),z(m.fbo),t=m}v.blendFunc(v.ONE,v.ONE),v.enable(v.BLEND);for(var l=a.length-2;l>=0;l--){var s=a[l];v.uniform2f(Z.uniforms.texelSize,1/t.width,1/t.height),v.uniform1i(Z.uniforms.uTexture,t.attach(0)),v.viewport(0,0,s.width,s.height),z(s.fbo),t=s}v.disable(v.BLEND),$.bind(),v.uniform2f($.uniforms.texelSize,1/t.width,1/t.height),v.uniform1i($.uniforms.uTexture,t.attach(0)),v.uniform1f($.uniforms.intensity,r.BLOOM_INTENSITY),v.viewport(0,0,n.width,n.height),z(n.fbo)}(d.read,D),null!=n&&r.TRANSPARENT?v.disable(v.BLEND):(v.blendFunc(v.ONE,v.ONE_MINUS_SRC_ALPHA),v.enable(v.BLEND));var t=null==n?v.drawingBufferWidth:h,i=null==n?v.drawingBufferHeight:T;if(v.viewport(0,0,t,i),!r.TRANSPARENT){W.bind();var o=r.BACK_COLOR;v.uniform4f(W.uniforms.color,o.r/255,o.g/255,o.b/255,1),z(n)}if(null==n&&r.TRANSPARENT&&(q.bind(),v.uniform1f(q.uniforms.aspectRatio,e.width/e.height),z(null)),r.SHADING){var u=r.BLOOM?J:K;if(u.bind(),v.uniform2f(u.uniforms.texelSize,1/t,1/i),v.uniform1i(u.uniforms.uTexture,d.read.attach(0)),r.BLOOM){v.uniform1i(u.uniforms.uBloom,D.attach(1)),v.uniform1i(u.uniforms.uDithering,V.attach(2));var f=de(V,t,i);v.uniform2f(u.uniforms.ditherScale,f.x,f.y)}}else{var c=r.BLOOM?j:k;if(c.bind(),v.uniform1i(c.uniforms.uTexture,d.read.attach(0)),r.BLOOM){v.uniform1i(c.uniforms.uBloom,D.attach(1)),v.uniform1i(c.uniforms.uDithering,V.attach(2));var m=de(V,t,i);v.uniform2f(c.uniforms.ditherScale,m.x,m.y)}}z(n)}function se(n,t,i,o,a){v.viewport(0,0,s,g),ee.bind(),v.uniform1i(ee.uniforms.uTarget,E.read.attach(0)),v.uniform1f(ee.uniforms.aspectRatio,e.width/e.height),v.uniform2f(ee.uniforms.point,n/e.width,1-t/e.height),v.uniform3f(ee.uniforms.color,i,-o,1),v.uniform1f(ee.uniforms.radius,r.SPLAT_RADIUS/100),z(E.write.fbo),E.swap(),v.viewport(0,0,h,T),v.uniform1i(ee.uniforms.uTarget,d.read.attach(0)),v.uniform3f(ee.uniforms.color,a.r,a.g,a.b),z(d.write.fbo),d.swap()}function ge(r){for(var n=0;n<r;n++){var t=he();t.r*=10,t.g*=10,t.b*=10,se(e.width*Math.random(),e.height*Math.random(),1e3*(Math.random()-.5),1e3*(Math.random()-.5),t)}}function he(){var e=function(e,r,n){var t,i,o,a,u,v,f,c;switch(a=Math.floor(6*e),v=n*(1-r),f=n*(1-(u=6*e-a)*r),c=n*(1-(1-u)*r),a%6){case 0:t=n,i=c,o=v;break;case 1:t=f,i=n,o=v;break;case 2:t=v,i=n,o=c;break;case 3:t=v,i=f,o=n;break;case 4:t=c,i=v,o=n;break;case 5:t=n,i=v,o=f}return{r:t,g:i,b:o}}(Math.random(),1,1);return e.r*=.15,e.g*=.15,e.b*=.15,e}function Te(e){var r=v.drawingBufferWidth/v.drawingBufferHeight;r<1&&(r=1/r);var n=Math.round(e*r),t=Math.round(e);return v.drawingBufferWidth>v.drawingBufferHeight?{width:n,height:t}:{width:t,height:n}}function de(e,r,n){return{x:r/e.width,y:n/e.height}}!function n(){e.width==e.clientWidth&&e.height==e.clientHeight||(e.width=e.clientWidth,e.height=e.clientHeight,ue()),function(){o.length>0&&ge(o.pop());for(var e=0;e<i.length;e++){var n=i[e];n.moved&&(se(n.x,n.y,n.dx,n.dy,n.color),n.moved=!1)}if(!r.COLORFUL)return;if(me+100<Date.now()){me=Date.now();for(var t=0;t<i.length;t++){i[t].color=he()}}}(),r.PAUSED||function(e){v.disable(v.BLEND),v.viewport(0,0,s,g),te.bind(),v.uniform2f(te.uniforms.texelSize,1/s,1/g),v.uniform1i(te.uniforms.uVelocity,E.read.attach(0)),z(x.fbo),ie.bind(),v.uniform2f(ie.uniforms.texelSize,1/s,1/g),v.uniform1i(ie.uniforms.uVelocity,E.read.attach(0)),v.uniform1i(ie.uniforms.uCurl,x.attach(1)),v.uniform1f(ie.uniforms.curl,r.CURL),v.uniform1f(ie.uniforms.dt,e),z(E.write.fbo),E.swap(),ne.bind(),v.uniform2f(ne.uniforms.texelSize,1/s,1/g),v.uniform1i(ne.uniforms.uVelocity,E.read.attach(0)),z(p.fbo),Y.bind(),v.uniform1i(Y.uniforms.uTexture,R.read.attach(0)),v.uniform1f(Y.uniforms.value,r.PRESSURE_DISSIPATION),z(R.write.fbo),R.swap(),oe.bind(),v.uniform2f(oe.uniforms.texelSize,1/s,1/g),v.uniform1i(oe.uniforms.uDivergence,p.attach(0));for(var n=0;n<r.PRESSURE_ITERATIONS;n++)v.uniform1i(oe.uniforms.uPressure,R.read.attach(1)),z(R.write.fbo),R.swap();ae.bind(),v.uniform2f(ae.uniforms.texelSize,1/s,1/g),v.uniform1i(ae.uniforms.uPressure,R.read.attach(0)),v.uniform1i(ae.uniforms.uVelocity,E.read.attach(1)),z(E.write.fbo),E.swap(),re.bind(),v.uniform2f(re.uniforms.texelSize,1/s,1/g),f.supportLinearFiltering||v.uniform2f(re.uniforms.dyeTexelSize,1/s,1/g);var t=E.read.attach(0);v.uniform1i(re.uniforms.uVelocity,t),v.uniform1i(re.uniforms.uSource,t),v.uniform1f(re.uniforms.dt,e),v.uniform1f(re.uniforms.dissipation,r.VELOCITY_DISSIPATION),z(E.write.fbo),E.swap(),v.viewport(0,0,h,T),f.supportLinearFiltering||v.uniform2f(re.uniforms.dyeTexelSize,1/h,1/T);v.uniform1i(re.uniforms.uVelocity,E.read.attach(0)),v.uniform1i(re.uniforms.uSource,d.read.attach(1)),v.uniform1f(re.uniforms.dissipation,r.DENSITY_DISSIPATION),z(d.write.fbo),d.swap()}(.016);le(null),requestAnimationFrame(n)}(),document.querySelector("body").addEventListener("mousemove",(function(e){i[0].moved=i[0].down,i[0].dx=5*(e.offsetX-i[0].x),i[0].dy=5*(e.offsetY-i[0].y),i[0].x=e.offsetX,i[0].y=e.offsetY})),document.querySelector("body").addEventListener("touchmove",(function(e){e.preventDefault();for(var r=e.targetTouches,n=0;n<r.length;n++){var t=i[n];t.moved=t.down,t.dx=8*(r[n].pageX-t.x),t.dy=8*(r[n].pageY-t.y),t.x=r[n].pageX,t.y=r[n].pageY}}),!1),document.querySelector("body").addEventListener("mousedown",(function(){i[0].down=!0,i[0].color=he()})),document.querySelector("body").addEventListener("touchstart",(function(e){e.preventDefault();for(var r=e.targetTouches,t=0;t<r.length;t++)t>=i.length&&i.push(new n),i[t].id=r[t].identifier,i[t].down=!0,i[t].x=r[t].pageX,i[t].y=r[t].pageY,i[t].color=he()})),document.querySelector("body").addEventListener("mouseup",(function(){i[0].down=!1})),document.querySelector("body").addEventListener("touchend",(function(e){for(var r=e.changedTouches,n=0;n<r.length;n++)for(var t=0;t<i.length;t++)r[n].identifier==i[t].id&&(i[t].down=!1)})),document.querySelector("body").addEventListener("keydown",(function(e){"KeyP"===e.code&&(r.PAUSED=!r.PAUSED)," "===e.key&&o.push(parseInt(20*Math.random())+5)}))}))},function(e,r,n){}]);